 Step 1 : Create Store 

        import {configureStore} from "@reduxjs/toolkit"

        export const store = configureStore({
            reducer: {},
        })


Step 2 : Provide the Redux Store to React 

        import ReactDOM from "react-dom/client"
        import App from "./App.jsx"
        import { store } from "./app/store"
        import { Provider } from "react-redux"

        ReactDOM.createRoot(document.getElementById("root")).render(
            <Provider store={store}>
                <App/>
            </Provider>
        )


Step 3 : Create Slice 

        import { createSlice } from "@reduxjs/toolkit"

        export const counterSlice = createSlice({
            name: "counter",
            initialState: { value: 0 },
            reducers: {
                increment: (state) => {
                    state.value += 1
                }
                decrement: (state) => {
                    state.value -= 1
                },
            },
        })

        export const { increment, decrement } = counterSlice.actions

        export default counterSlice.reducer


Step 4 : Add Slice Reducers to the Store

        import { configureStore } from "@reduxjs/toolkit"
        import counterReducer from "./features/counter/counterSlice"

        export const store = configureStore({
            reducer: {
                counter: counterReducer,
            }
        })


Step 5 : Use Redux State and Actions in React Components

        import { useSelector, useDispatch } from "react-redux"
        import { decrement, increment } from "../app/features/counterSlice"

        export const Counter = () => {
            const count = useSelector((state) => state.counter.value)
            const dispatch = useDispatch()

            return (
                <div>
                    <div>
                        <h1>Count : {count}</h1>
                        <button onClick={() => dispatch(increment())}>Increment</button>
                        <button onClick={() => dispatch(decrement())}>decrement</button>
                    </div>
                </div>
            )
        }